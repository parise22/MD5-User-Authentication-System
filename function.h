#ifndef FUNCTION_H
#define FUNCTION_H
#include <iostream>
#include <string>

using std::string;

int createUser(string username);
bool checkExists(string username);
string generateSalt();
int loggingIn(string user);
string getSaltValue(string username);
bool checkPassSaltHash(string passSaltHash, string username);
string getClearance(string username);
int optionsMenu(string username);
string requestFilename();
int createFile(string user, string clearance, string fileName);
int listAllFiles();
bool checkFileExists(string fileName);
string getFileClearance(string fileName);

/*
- To create user, Filesystem -i 
	-Checks if username exists. If it does terminate
		-If it doesn't, request for a password and confirmation password. Check to see if they match.
			-Then we request for User Clearance
				- Then modify salt.txt and shadow.txt for user
					- Add generic example then user - Username:Salt
						- Salt is randomly chosen 8 digits
					- Add generic exmaple of shadow then user -Username:PassSaltHash:SecurityClearance
						- PassSaltHash is generated by MD5 function
						- It is concatenation of Password and Salt Value

- To log in, Filesytem with no arguments
	-Files.store needs to load
	- prompt for username and password
		- Check if credentials exists in salt.txt
			- if yes, passSaltHash is generated, display notification
				- Compare passSaltHash with that in shadow.txt
					- If not matched, terminate. If matched, authenticate and display clearance


- Once logged in
	- display options: (C)reate, (A)ppend, (R)ead, (W)rite, (L)ist, (S)ave or (E)xit
		-C will request filename
		- Classification level of file will be same as owner clearance.
			- list of files should be exist.
				- if name does not exist in list, name, owner and classification add to list.
				- if exists, prompt user and display options menu 
		-A,R and W request filename
			- if file doesn't exist, error message and options menu
			- if file exists, success of failure depending on clearance of user and file 
			- Using Bell-LaPadula model
				- display options menu again
		- L lists all files in filesystem record
		- S saves data to file Files.store (Human readable)
		- E exits system with confirmation of Y or N

- Upon execution of program, report a test output of MD5. Call MD5 with string "This is a test"





*/
#endif
